buildscript {
  repositories {
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }

    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

plugins {
    id 'java-library'
}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"
apply plugin: "maven"

repositories {
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }

}

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

version = "${config.minecraft_version}-${config.mod_version}"
group= "com.shedar.IC2NuclearControl"
archivesBaseName = "IC2NuclearControl"
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    replaceIn "shedar/mods/ic2/nuclearcontrol/IC2NuclearControl.java"
    replace "GRADLE_MODVERSION", config.mod_version
}

dependencies {
    compile codeChickenCoreVersion
    compile notEnoughItemsVersion
    compile codeChickenLibVersion
    compile "net.industrial-craft:industrialcraft-2:2.2.828-experimental:dev"
    compile "mcp.mobius.waila:Waila:1.5.10_1.7.10:dev"
	compile argoVersion
	compile files(openCVersion)
    compile files(rcVersion)
	compile files(aeVersion)
	compile files(cofhCoreVersion)
	compile files(brVersion)  
	compile files(mekVersion)
	compile files(buildcraftVersion)
    compile files(gregtechVersion)
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs){
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs){
        exclude 'mcmod.info'
    }


}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

task libJar(type: Jar) {
    from(sourceSets.main.java) {
        include "shedar/mods/ic2/nuclearcontrol/api/**/*"
    }
    classifier = 'api'
}

// Tell the artifact system about our extra jars
artifacts {
    archives deobfJar, libJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = rootProject.name
            groupId = project.group
            version = project.version
            artifacts = [deobfJar, libJar, jar]
            components.java.withVariantsFromConfiguration(configurations.runtimeElements) {
                skip()
            }
        }
    }
}

artifactory {
    contextUrl = System.getenv("MAVEN_URL")
    publish {
        repository {
            repoKey = 'thorfusion'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = false
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'central'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true

        }
    }
}

