buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = newNuclearControlVersion
group= "com.shedar.IC2NuclearControl"
archivesBaseName = "IC2NuclearControl"
minecraft {
    version = forgeVersion
	runDir = "eclipse"
	replace "@VERSION@", project.version
}

repositories {
	maven {
		name = "ic2"
		url = "http://maven.ic2.player.to/"
	}
	maven { 
        name = "chickenbones" 
        url = "http://chickenbones.net/maven/" 
	}
	maven {
        name "ProfMobius"
        url "https://www.mobiusstrip.eu/maven/"
    }
	maven {
		name "OC"
		url "http://maven.cil.li/"
	}
}

dependencies {
	/*runtime 'org.apache.commons:commons-math3:3.2' // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'org.jfree:jcommon:1.0.21'             // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'org.jfree:jfreechart:1.0.17'          // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'com.miglayout:miglayout-swing:4.2'    // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime 'net.sf.opencsv:opencsv:2.3'           // Needed for dev opis because it doesn't know how to specify dependencies properly
	runtime "io.netty-opis:Netty-opis:4.0.23"      // Needed for dev opis because it doesn't know how to specify dependencies properly*/

	compile ic2Version
	compile codeChickenCoreVersion
	compile notEnoughItemsVersion
	compile codeChickenLibVersion
	compile argoVersion
	compile wailaVersion
	compile openCVersion
	compile files(aeVersion)
	compile files(cofhCoreVersion)
	compile files(brVersion)  
	compile files(mekVersion)
	compile files(buildcraftVersion)
}


task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

task libJar(type: Jar) {
    from(sourceSets.main.java) {
        include "shedar/mods/ic2/nuclearcontrol/api/**/*"
    }
    classifier = 'api'
}

// Tell the artifact system about our extra jars
artifacts {
    archives deobfJar, libJar
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs){
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs){
        exclude 'mcmod.info'
    }
}
